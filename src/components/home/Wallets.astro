---
import { client } from "../../../tina/__generated__/client";
import { TinaMarkdown } from "tinacms/dist/rich-text";
import CommonStyles from "../CommonStyles.astro";

const walletsPageResponse = await client.queries.walletsPage({ relativePath: "wallets.md" });
const walletsPageContent = walletsPageResponse.data.walletsPage;

const walletList = (await Promise.all(
  walletsPageContent.walletList?.map(async (walletFileName) => {
    if (!walletFileName) return null;
    try {
      const walletResponse = await client.queries.wallet({ relativePath: walletFileName });
      return walletResponse.data.wallet;
    } catch (error) {
      console.error(`Error loading wallet ${walletFileName}:`, error);
      return null;
    }
  }) ?? []
)).filter(wallet => wallet !== null);

const featureIcons = {
  dispensers: "fa-solid fa-faucet",
  assetCreation: "fa-solid fa-plus",
  dex: "fa-solid fa-arrows-rotate",
};

const platformIcons = {
  web: "fa-solid fa-globe",
  mobile: "fa-solid fa-mobile-screen",
  desktop: "fa-solid fa-desktop",
};

const socialIcons = {
  twitter: "fa-brands fa-x-twitter",
  telegram: "fa-brands fa-telegram",
};
---

<section id="wallets" class="wallets py-5">
  <div class="container">
    <h2 class="text-center mb-4">{walletsPageContent.title}</h2>
    <div class="row justify-content-center mb-5">
      <div class="col-lg-8">
        <div class="text-center">
          <p class="subtitle">{walletsPageContent.subtitle}</p>
          <TinaMarkdown content={walletsPageContent.info} />
        </div>
      </div>
    </div>
  
    <div class="row g-4">
      {walletList.map((wallet) => (
        <div class="col-md-4">
          <div class="card h-100">
            <div class="card-body">
              <div class="d-flex align-items-center mb-3">
                <img src={wallet?.logo} alt={`${wallet?.title} logo`} class="wallet-icon me-3" />
                <h3 class="card-title mb-0">{wallet?.title}</h3>
                <div class="ms-auto d-flex align-items-center">
                  {!wallet?.isV104Compatible && (
                    <i class="fas fa-exclamation-triangle text-warning me-1" style="font-size: 0.8rem;"></i>
                  )}
                  <span 
                    class={`version-indicator ${wallet?.isV104Compatible ? 'compatible' : 'incompatible'}`} 
                    data-bs-toggle="tooltip" 
                    data-bs-placement="top" 
                    title={wallet?.isV104Compatible ? "Compatible with latest protocol version" : "Not compatible with latest protocol version"}
                  >
                    <span class="indicator-dot"></span>
                    <span class="version-text">v10.4</span>
                  </span>
                </div>
              </div>
              <p class="card-text">{wallet?.description}</p>
              <div class="features mb-0">
                <h6 class="mb-2">Advanced Features:</h6>
                <div class="d-flex flex-wrap">
                  {Object.entries(wallet?.features || {}).filter(([key]) => key !== '__typename').map(([feature, enabled]) => (
                    <span class={`feature-badge me-2 mb-2 ${enabled ? 'bg-feature-enabled' : 'bg-feature-disabled'}`} title={feature}>
                      <i class={`fa-solid ${featureIcons[feature as keyof typeof featureIcons]} me-2`}></i>
                      {feature}
                    </span>
                  ))}
                </div>
              </div>
            </div>
            <div class="card-footer bg-white border-top-0">
              <a href={wallet?.link} class="btn btn-primary w-100" target="_blank" rel="noopener noreferrer">Get {wallet?.title}</a>
              <div class="d-flex justify-content-between align-items-center mt-3">
                <div class="social-links">
                  {wallet?.twitter && (
                    <a href={wallet.twitter} target="_blank" rel="noopener noreferrer">
                      <i class={`fab ${socialIcons.twitter} social-icon`}></i>
                    </a>
                  )}
                  {wallet?.telegram && (
                    <a href={wallet.telegram} target="_blank" rel="noopener noreferrer">
                      <i class={`fab ${socialIcons.telegram} social-icon`}></i>
                    </a>
                  )}
                </div>
                <div class="platforms">
                  <div class="d-flex justify-content-end">
                    {Object.entries(wallet?.platforms || {}).filter(([key]) => key !== '__typename').map(([platform, available]) => (
                      available && (
                        <span class="platform-icon me-2" title={platform}>
                          <i class={`fa-solid me-2 ${platformIcons[platform as keyof typeof platformIcons]}`}></i>
                          {platform}
                        </span>
                      )
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<CommonStyles />

<style>
  .wallets {
    position: relative;
  }

  .wallets::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: url('/images/pattern.png');
    background-repeat: repeat;
    mask-image: linear-gradient(to bottom, transparent, black);
    -webkit-mask-image: linear-gradient(to bottom, transparent, black);
    z-index: 0;
  }

  .container {
    position: relative;
    z-index: 1;
  }

  .card {
    background-color: #ffffff;
    border: none;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease-in-out;
    padding: 1.5rem;
  }

  .card:hover {
    transform: translateY(-5px);
  }

  .wallet-icon {
    width: 40px;
    height: 40px;
    object-fit: contain;
  }

  .card-title {
    font-size: 1.25rem;
    font-weight: 500;
  }

  .card-text {
    font-size: 0.9rem;
    line-height: 1.5;
    color: #6c757d;
  }

  .card-footer {
    padding-top: 1rem;
  }

  .btn-primary {
    background-color: #EC1550;
    border-color: #EC1550;
    padding: 0.5rem 1.5rem;
  }

  .btn-primary:hover {
    background-color: #d01348;
    border-color: #d01348;
  }

  .features,
  .platforms {
    font-size: 0.9rem;
  }

  .badge {
    font-weight: normal;
    text-transform: capitalize;
    padding: 0.4em 0.8em;
  }
  
  .platform-icon {
    font-size: 1.2rem;
    color: #6c757d;
  }

  .feature-badge {
    font-size: 0.85rem;
    font-weight: normal;
    text-transform: capitalize;
    padding: 0.4em 0.8em;
    border-radius: 20px;
  }

  .bg-feature-enabled {
    background-color: #fde8ec;
    color: #EC1550;
  }

  .bg-feature-disabled {
    background-color: #f8f9fa;
    color: #9a9ea2;
  }

  .feature-badge i {
    font-size: 1rem;
  }

  .platform-icon {
    font-size: 0.85rem;
    color: #6c757d;
    background-color: #f8f9fa;
    padding: 0.4em 0.8em;
    border-radius: 20px;
    display: inline-flex;
    align-items: center;
  }

  .platform-icon i {
    margin-right: 0.5em;
  }

  .features {
    margin-bottom: 1.5rem;
  }

  .v104-badge {
    background-color: #28a745;
    color: white;
    font-size: 0.75rem;
    padding: 0.25em 0.5em;
    border-radius: 0.25rem;
    font-weight: bold;
    cursor: help;
  }

  .version-indicator {
    display: inline-flex;
    align-items: center;
    font-size: 0.75rem;
    padding: 0.25em 0.5em;
    border-radius: 0.25rem;
    font-weight: bold;
    cursor: help;
  }

  .version-indicator.compatible {
    color: #28a745;
  }

  .version-indicator.incompatible {
    color: #6c757d;
    opacity: 0.6;
  }

  .indicator-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    margin-right: 0.25em;
  }

  .compatible .indicator-dot {
    background-color: #28a745;
  }

  .incompatible .indicator-dot {
    background-color: #6c757d;
  }

  .version-text {
    line-height: 1;
  }

  .social-links a {
    text-decoration: none !important;
    margin-right: 5px;
  }

  .social-icon {
    font-size: 1.2rem;
    color: #6c757d;
    transition: color 0.3s ease;
    text-decoration: none;
  }

  .social-icon:hover {
    color: #EC1550;
  }
</style>

<script>
  // Initialize Bootstrap tooltips
  document.addEventListener('DOMContentLoaded', function() {
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    })
  });
</script>

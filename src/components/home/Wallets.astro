---
import { client } from "../../../tina/__generated__/client";
import { TinaMarkdown } from "tinacms/dist/rich-text";
import { Icon } from 'astro-icon/components';

const walletsPageResponse = await client.queries.walletsPage({ relativePath: "wallets.md" });
const walletsPageContent = walletsPageResponse.data.walletsPage;

const walletList = (await Promise.all(
  walletsPageContent.walletList?.map(async (walletFileName) => {
    if (!walletFileName) return null;
    try {
      const walletResponse = await client.queries.wallet({ relativePath: walletFileName });
      return walletResponse.data.wallet;
    } catch (error) {
      console.error(`Error loading wallet ${walletFileName}:`, error);
      return null;
    }
  }) ?? []
)).filter(wallet => wallet !== null);

const featureIcons = {
  dispensers: "faucet",
  assetCreation: "plus",
  dex: "arrows-rotate",
};

const platformIcons = {
  web: "globe",
  mobile: "mobile-screen",
  desktop: "desktop",
};

const socialIcons = {
  twitter: "x-twitter",
  telegram: "telegram",
};
---

<section id="wallets" class="bg-white py-16 relative">
  <div class="absolute inset-0 bg-repeat opacity-10 z-0" style="background-image: url('/images/pattern.png');"></div>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
    <h2 class="text-3xl font-light text-blue-900 text-center mb-4">{walletsPageContent.title}</h2>
    <div class="max-w-3xl mx-auto mb-12">
      <p class="text-xl font-light text-blue-900 text-center mb-4">{walletsPageContent.subtitle}</p>
      <div class="text-center text-blue-900">
        <TinaMarkdown content={walletsPageContent.info} />
      </div>
    </div>
  
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {walletList.map((wallet) => (
        <div class="bg-white rounded-lg shadow-md overflow-hidden transition-transform duration-300 hover:-translate-y-1 flex flex-col">
          <div class="p-6 flex-grow">
            <div class="flex items-center justify-between mb-4">
              <div class="flex items-center">
                <img src={wallet?.logo} alt={`${wallet?.title} logo`} class="w-10 h-10 object-contain mr-3" />
                <h3 class="text-xl font-normal text-blue-900">{wallet?.title}</h3>
              </div>
              <div class="flex items-center">
                {!wallet?.isV104Compatible && (
                  <Icon name="fa6-solid:triangle-exclamation" class="text-yellow-500 mr-1 w-4 h-4" />
                )}
                <span 
                  class={`inline-flex items-center text-xs font-bold ${wallet?.isV104Compatible ? 'text-green-500' : 'text-gray-400'}`}
                  data-bs-toggle="tooltip"
                  data-bs-placement="top"
                  title={wallet?.isV104Compatible ? "Compatible with latest protocol version" : "Not fully compatible with latest protocol version"}
                >
                  <span class={`w-2 h-2 rounded-full mr-1 ${wallet?.isV104Compatible ? 'bg-green-500' : 'bg-gray-400'}`}></span>
                  v10.4
                </span>
              </div>
            </div>
            <p class="text-sm text-blue-900 mb-4">{wallet?.description}</p>
            <div class="mb-4">
              <h6 class="text-sm font-semibold text-blue-900 mb-2">Advanced Features:</h6>
              <div class="flex flex-wrap gap-2">
                {Object.entries(wallet?.features || {}).filter(([key]) => key !== '__typename').map(([feature, enabled]) => (
                  <span class={`text-xs px-2 py-1 rounded-full ${enabled ? 'bg-red-100 text-counterparty-red' : 'bg-gray-100 text-gray-500'}`}>
                    <Icon name={`fa6-solid:${featureIcons[feature as keyof typeof featureIcons]}`} class="w-3 h-3 inline-block mr-1" />
                    {feature}
                  </span>
                ))}
              </div>
            </div>
          </div>
          <div class="px-6 pb-6 mt-auto">
            <a href={wallet?.link} class="block w-full bg-counterparty-red hover:bg-red-600 text-white text-center font-bold py-2 px-4 rounded transition duration-300" target="_blank" rel="noopener noreferrer">
              Get {wallet?.title}
            </a>
            <div class="flex justify-between items-center mt-4">
              <div class="flex space-x-2">
                {wallet?.twitter && (
                  <a href={wallet.twitter} target="_blank" rel="noopener noreferrer" class="text-gray-400 hover:text-counterparty-red transition-colors duration-300">
                    <Icon name="fa6-brands:x-twitter" class="w-4 h-4" />
                  </a>
                )}
                {wallet?.telegram && (
                  <a href={wallet.telegram} target="_blank" rel="noopener noreferrer" class="text-gray-400 hover:text-counterparty-red transition-colors duration-300">
                    <Icon name="fa6-brands:telegram" class="w-4 h-4" />
                  </a>
                )}
              </div>
              <div class="flex space-x-2">
                {Object.entries(wallet?.platforms || {}).filter(([key]) => key !== '__typename').map(([platform, available]) => (
                  available && (
                    <span class="text-xs bg-gray-100 text-gray-600 px-2 py-1 rounded-full" title={platform}>
                      <Icon name={`fa6-solid:${platformIcons[platform as keyof typeof platformIcons]}`} class="w-3 h-3 inline-block mr-1" />
                      {platform}
                    </span>
                  )
                ))}
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  #wallets::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: url('/images/pattern.png');
    background-repeat: repeat;
    mask-image: linear-gradient(to bottom, transparent, black);
    -webkit-mask-image: linear-gradient(to bottom, transparent, black);
    z-index: 0;
  }
</style>

<script>
  // Initialize Bootstrap tooltips
  document.addEventListener('DOMContentLoaded', function() {
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    })
  });
</script>
